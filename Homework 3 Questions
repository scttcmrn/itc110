Chapter 3 Questions


1. Why are functions advantageous to have in your programs?

Functions are good for organization and debugging.


2. When does the code in a function execute: when the function is defined or when the function is called?

The code in a function executes when the function is called.


3. What statement creates a function?

The def statement.


4. What is the difference between a function and a function call?

A function is a set of instructions to be executed. A functionn call is the act of telling the function to execute.


5. How many global scopes are there in a Python program? How many local scopes?

There is only one global scope in a Python program. You may have however many local scopes you want.


6. What happens to variables in a local scope when the function call returns?

The local scope and its variables are destoyed.


7. What is a return value? Can a return value be part of an expression?

A return value is the value that a function call evaluates to.


8. If a function does not have a return statement, what is the return value of a call to that function?

None


9. How can you force a variable in a function to refer to the global variable?




10. What is the data type of None?




11. What does the import areallyourpetsnamederic statement do?




12. If you had a function named bacon() in a module named spam, how would you call it after importing spam?




13. How can you prevent a program from crashing when it gets an error?




14. What goes in the try clause? What goes in the except clause?

